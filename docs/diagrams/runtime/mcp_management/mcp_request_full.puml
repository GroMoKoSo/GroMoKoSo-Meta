@startuml
autonumber

actor client as "alice:McpClient"

participant router as ":McpRouterConfig"
participant handler as ":McpRequestHandler"
participant manager as ":McpServerService"
participant user as ":UserManagementClient"
participant provider as ":GroMoSoKoMcpServerProvider"

client -> router: mcp request
activate router
router -> handler: handleRequest(request)
activate handler
handler -> manager: getServerForUser("alice")
activate manager
manager -> manager: servers.get("alice")

alt server == null

    par
        manager ->> user: getToolsForUser("alice")
        activate user
        manager <-- user: :List<ToolSet>
        deactivate user
    else
        manager -> provider: builder()
        activate provider
        create participant builder as "builder:GroMoSoKoMcpServerSpecification"
        provider -> builder: new
        activate builder
        manager <-- provider: builder
        deactivate provider
    end



    manager -> builder: name("alice")

    participant tool_factory as ":ToolFactory"

    loop for each toolSet in toolSets
        manager -> builder: addToolSet(toolSet)
        activate tool_factory
        loop for each tool in toolSet
            builder -> tool_factory: create(toolSet)
            create participant tool as ":AsyncToolSpecification"
            tool_factory -> tool: new
            builder <- tool_factory: :AsyncToolSpecification
        end
            deactivate tool_factory
    end

    manager -> builder: build()

    create participant server_router as "server_router:RouterFunction"
    builder -> server_router : new
    create participant mcp_server as "mcp_server:McpAsyncServer"
    builder -> mcp_server : new

    create participant alice_server as "aliceServer:GroMoSoKoMcpServer"
    builder -> alice_server: new(mcp_server, server_router)
    manager <-- builder: aliceServer

    destroy builder
end

handler <-- manager: aliceServer
deactivate manager

handler -> alice_server: handle(request)
activate alice_server
alice_server -> server_router: route(request)
activate server_router
server_router -> mcp_server: handle request
activate mcp_server
mcp_server -> tool: invoke(request)
activate tool
tool -> tool_factory: invoke(request)
activate tool_factory
participant api as ":ApiManagementClient"
tool_factory -> api: call(request)
activate api

tool_factory <-- api: api response
deactivate api
tool <-- tool_factory: api response
deactivate tool_factory
mcp_server <-- tool: mcp response
deactivate tool
server_router <-- mcp_server: response
deactivate mcp_server
alice_server <-- server_router: response
deactivate server_router
handler <-- alice_server: response
deactivate alice_server

router <-- handler: :ServerResponse
deactivate handler

client <-- router: mcp response
deactivate router

@enduml