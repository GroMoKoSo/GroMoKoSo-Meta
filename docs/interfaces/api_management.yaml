openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8082
  description: Generated server url
tags:
- name: APIs
  description: CRUD & invocation for API definitions
paths:
  /apis/{id}:
    get:
      tags:
      - APIs
      summary: Get API by id
      description: Fetch a single API definition by its id.
      operationId: getApi
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: user
        in: query
        description: Requesting Group
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Not allowed
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: API returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api"
    put:
      tags:
      - APIs
      summary: Replace an API
      description: Replaces an existing API definition by id.
      operationId: putApi
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: user
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Optional group
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api"
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: API or related service not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Not allowed
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: API updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api"
    delete:
      tags:
      - APIs
      summary: Delete an API
      description: Deletes an API definition by id.
      operationId: deleteApi
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: user
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Optional group
        required: false
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: API not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Not allowed
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "204":
          description: Deleted
          content:
            '*/*':
              schema:
                type: object
  /apis:
    get:
      tags:
      - APIs
      summary: List APIs
      description: Returns all API definitions.
      operationId: getApis
      parameters:
      - name: user
        in: query
        description: Requesting group
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: List of APIs returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Api"
    post:
      tags:
      - APIs
      summary: Create an API
      description: Creates a new API definition.
      operationId: postApi
      parameters:
      - name: user
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Requesting group
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api"
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal Server error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Not allowed
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: API created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api"
  /apis/{id}/invoke:
    post:
      tags:
      - APIs
      summary: Invoke an API
      description: Invokes the configured upstream API using the provided query.
      operationId: invokeApi
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: user
        in: query
        description: Requesting user
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: Optional group
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvokeQuery"
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: API not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal Server error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Not allowed
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: Invocation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvokeResult"
components:
  schemas:
    Api:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        version:
          type: string
        format:
          type: string
        spec:
          type: object
          additionalProperties: {}
        token:
          type: string
    InvokeQuery:
      type: object
      properties:
        requestType:
          type: string
          enum:
          - POST
          - PUT
          - GET
          - PATCH
          - DELETE
        requestPath:
          type: string
        header:
          type: object
          additionalProperties:
            type: string
        body:
          type: object
          additionalProperties: {}
        requestParam:
          type: object
          additionalProperties:
            type: string
        pathParam:
          type: object
          additionalProperties:
            type: string
    InvokeResult:
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
        header:
          type: object
          additionalProperties:
            type: string
        body:
          type: string
