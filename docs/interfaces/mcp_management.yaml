openapi: 3.1.0
info:
  title: GroMoKoSo - McpManagement
  description: This API provides endpoints for managing mcp tools
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 0.1.0
servers:
  - url: https://zdh-swa-muenker.zdh.thm.de/gromokoso_mcpmanagement
security:
  - keycloak_auth: []
tags:
  - name: ToolSet Management
    description: Endpoints for managing tool sets.
  - name: Metadata
    description: Endpoints for retrieving metadata for protected resources.
paths:
  /toolsets/{id}:
    get:
      tags:
        - ToolSet Management
      summary: Get a tool set by ID
      description: Retrieve a single tool set using its unique ID.
      operationId: getToolSet
      parameters:
        - name: id
          in: path
          description: ID of the tool set to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successfully retrieved tool set
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ToolSet"
        "404":
          description: Tool set not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ToolSet"
    put:
      tags:
        - ToolSet Management
      summary: Update a tool set
      description: Update an existing tool set with new specifications or create a
        new tool set.
      operationId: putToolSet
      parameters:
        - name: id
          in: path
          description: ID of the tool set to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolSpecificationDto"
        required: true
      responses:
        "202":
          description: A new tool set was created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ToolSpecificationDto"
        "200":
          description: Tool set successfully updated
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ToolSpecificationDto"
    delete:
      tags:
        - ToolSet Management
      summary: Delete a tool set
      description: Delete a tool set by its ID.
      operationId: deleteToolSet
      parameters:
        - name: id
          in: path
          description: ID of the tool set to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Tool set successfully deleted
        "404":
          description: Tool set not found
  /users/{id}/toolsets/list-changed:
    post:
      tags:
        - ToolSet Management
      summary: Notify a user's tool set list has changed
      description: Signal that a specific user's tool set list has been updated. The
        body MUST contain a list of all api ids that should be available to the user
      operationId: updateToolSetList
      parameters:
        - name: id
          in: path
          description: ID of the user whose tool set list has changed
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: Notification successful
  /toolsets:
    get:
      tags:
        - ToolSet Management
      summary: Get all tool sets
      description: Retrieve a list of all available tool sets.
      operationId: getToolSets
      responses:
        "200":
          description: Successfully retrieved list
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ToolSet"
  /.well-known/oauth-protected-resource:
    get:
      tags:
        - Metadata
      operationId: getProtectedResourceMetadata
      responses:
        "200":
          description: 'Retrieve metadata for protected resources. Used for the mcp
            endpoint  '
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
components:
  schemas:
    ToolDto:
      type: object
      properties:
        title:
          type: string
          description: Unique identifier for the tool
          minLength: 1
        description:
          type: string
          description: Human-readable description of functionality
          minLength: 1
        requestMethod:
          type: string
          description: HTTP request method
          minLength: 1
        endpoint:
          type: string
          description: Endpoint URL of the API
          minLength: 1
        inputSchema:
          type: string
          description: JSON Schema defining expected parameters
          minLength: 1
      required:
        - description
        - endpoint
        - inputSchema
        - requestMethod
        - title
    ToolSpecificationDto:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier for the tool set
          minLength: 1
        description:
          type: string
          description: Human-readable description of the tool set
          minLength: 1
        tools:
          type: array
          description: List of tools to include in the tool set. One tool per API
            endpoint
          items:
            $ref: "#/components/schemas/ToolDto"
          minItems: 1
      required:
        - description
        - name
        - tools
    Tool:
      type: object
      properties:
        id:
          type: integer
          format: int32
        toolSet:
          $ref: "#/components/schemas/ToolSet"
        title:
          type: string
        description:
          type: string
        requestMethod:
          type: string
        endpoint:
          type: string
        inputSchema:
          type: string
        name:
          type: string
    ToolSet:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        tools:
          type: array
          items:
            $ref: "#/components/schemas/Tool"
  securitySchemes:
    oauth2_auth:
      type: oauth2
      description: OAuth2.0 authentication via Keycloak
      flows:
        authorizationCode:
          authorizationUrl: https://zdh-swa-muenker.zdh.thm.de/keycloak/realms/swa2025/protocol/openid-connect/auth
          tokenUrl: https://zdh-swa-muenker.zdh.thm.de/keycloak/realms/swa2025/protocol/openid-connect/token
          scopes: {}
